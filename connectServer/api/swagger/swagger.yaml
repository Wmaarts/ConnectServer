swagger: "2.0"
info:
  version: "0.0.1"
  title: Connect Api
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /photo:
    x-swagger-router-controller: photoController
    post:
      description: Post a photo to the server
      operationId: postPhoto
      parameters:
        - name: photo
          description: photo properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Photo"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /photo/{id}:
    x-swagger-router-controller: photoController
    get:
      description: Return photo by id
      operationId: getPhoto
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPhotoResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete photo by id
      operationId: deletePhoto
      parameters:
        - name: id
          description: photo id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Succes
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /photo/user/{id}:
    x-swagger-router-controller: photoController
    get:
      description: Get all photos associated with this user
      operationId: getAllPhotosByUser
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetPhotoListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  /photo/user/{firstUserId}/secondUser/{secondUserId}:
    x-swagger-router-controller: photoController
    get:
      description: Get all photos associated with both users
      operationId: getAllPhotosByTwoUsers
      parameters:
        - name: firstUserId
          type: string
          in: path
          required: true
        - name: secondUserId
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetPhotoListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /photo/service/{id}:
    x-swagger-router-controller: photoController
    get:
      description: Get all photos by service id
      operationId: getAllPhotosByServiceId
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetPhotoListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /user:
    x-swagger-router-controller: userController
    post:
      description: Post user to the server/database
      operationId: postUser
      parameters:
        - name: user
          description: user object
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Succes
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns all the users to the caller
      operationId: getUsers
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetUserListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /user/{id}:
    x-swagger-router-controller: userController
    get:
      description: Get specific user by id
      operationId: getUser
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    put:
      description: Update user
      operationId: putUser
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: user
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete user
      operationId: deleteUser
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /user/service/{id}:
    x-swagger-router-controller: userController
    get:
      description: Get all users by service id
      operationId: getAllUsersByService
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetUserListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
       
  /service:
    x-swagger-router-controller: serviceController
    post:
      description: Post service to the server/database
      operationId: postService
      parameters:
        - name: service
          description: service object
          in: body
          required: true
          schema:
            $ref: "#/definitions/Service"
      responses:
        "200":
          description: Succes
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
            
  /service/{id}:
    x-swagger-router-controller: serviceController
    get:
      description: Get service
      operationId: getService
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetServiceResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
          
    put:
      description: Update service
      operationId: updateService
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: service
          description: service properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Service"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete service
      operationId: deleteService
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Photo:
    type: object
    properties:
      photoString:
        type: string
      firstUserId:
        type: string
        description: first user (the one who made the picture)
      secondUserId:
        type: string
        description: second user (photo partner)
    required:
      - photoString
      - firstUserId
      - secondUserId
  
  User:
    type: object
    properties:
      role:
        type: string
      name:
        type: string
      telephoneNumber:
        type: number
      photo:
        type: string
    required:
      - name
  
  Service:
    type: object
    properties:
      name:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      geolocation:
        $ref: "#/definitions/Geolocation"
      usersVisited:
        type: array
        description: users with the app that are at the event/service
        items:
          type: string
      photos:
        type: array
        description: made photos at the event/service
        items:
          type: string
    required:
      - name
      - date
      - description
      - geolocation
      
  Geolocation:
    type: object
    properties:
      latitude:
        type: number
        format: float
        description: x-horizontal coordinate on map
      longitude:
        type: number 
        format: float
        description: y-vertical coordinate on map
  
  GetPhotoResponse:
    properties:
      Photo:
        $ref: "#/definitions/Photo"
        
  GetUserListResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items: 
          $ref: "#/definitions/User"
              
  GetUserResponse:
    properties:
      user:
        $ref: "#/definitions/User"
        
  GetServiceResponse:
    properties:
      service:
        $ref: "#/definitions/Service"
  
  GetPhotoListResponse:
    required:
      - photos
    properties:
      photos:
        type: array
        items:
          $ref: "#/definitions/Photo"
              
  
        
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
